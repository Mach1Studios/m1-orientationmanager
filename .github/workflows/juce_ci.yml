name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Release
  OM_BUNDLE_ID: com.mach1.spatial.orientationmanager
  OC_BUNDLE_ID: com.mach1.orientation.osc
  JUCE_VERSION: 7.0.5
  CMAKE_VERSION: 3.21.x
  VERSION: 1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [macos-latest, windows-2016]

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: 3.21.x
    
    - name: Test cmake
      run: cmake --version

    - uses: actions/checkout@v3

    - name: OM Submodule JUCE
      uses: actions/checkout@v3
      with:
        repository: juce-framework/JUCE
        path: JUCE
        ref: 7.0.5

    - name: OM Configure (macos)
      if: runner.os == 'MacOS'
      shell: bash
      working-directory: ${{runner.workspace}}
      run: cmake -Bbuild -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DM1_ORIENTATION_MANAGER_EMBEDDED=1

    - name: OM Configure (windows)
      if: runner.os == 'Windows'
      shell: bash
      working-directory: ${{runner.workspace}}
      run: cmake -Bbuild -A x64 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DM1_ORIENTATION_MANAGER_EMBEDDED=1

    - name: OM Build
      working-directory: ${{runner.workspace}}
      shell: bash
      run: cmake --build build --config $BUILD_TYPE

    # - name: 'OM Upload Artifact (macos)'
    #   if: runner.os == 'MacOS'
    #   working-directory: ${{runner.workspace}}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: m1-orientationmanager (MacOS)
    #     path: build/m1-orientationmanager_artefacts/Release/m1-orientationmanager
    #     if-no-files-found: error

    # - name: 'OM Upload Artifact (windows)'
    #   if: runner.os == 'Windows'
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: m1-orientationmanager (Windows)
    #     path: ${{runner.workspace}}\build\m1-orientationmanager_artefacts\Release\m1-orientationmanager.exe
    #     if-no-files-found: error

# --- OSC CLIENT APP --- 

    - name: OC Configure (macos)
      if: runner.os == 'MacOS'
      shell: bash
      working-directory: ${{runner.workspace}}/osc_client
      run: cmake -Bbuild -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DM1_ORIENTATION_MANAGER_EMBEDDED=1

    - name: OC Configure (windows)
      if: runner.os == 'Windows'
      shell: bash
      working-directory: ${{runner.workspace}}/osc_client
      run: cmake -Bbuild -A x64 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DM1_ORIENTATION_MANAGER_EMBEDDED=1

    - name: OC Build
      working-directory: ${{runner.workspace}}/osc_client
      shell: bash
      run: cmake --build build --config $BUILD_TYPE

    - uses: akiojin/generate-mac-installer-github-action@v0.1.0
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_INSTALLER_CERT: ${{ secrets.MACOS_INSTALLER_CERT }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      with:
        root-directory: ${{ github.workspace }}/osc_client/build/M1-OrientationOSC_artefacts/Release
        bundle-path: M1-OrientationOSC.app
        identifier: ${{ env.OC_BUNDLE_ID }}
        install-location: /Application/Mach1
        version: ${{ env.VERSION }}
        output-path: ${{ github.workspace }}/osc_client/build/m1-orientationmanager_artefacts/Release

    - name: OC Notarize (macos)
      if: runner.os == 'MacOS'
      uses: cocoalibs/xcode-notarization-action@v1
      working-directory: ${{runner.workspace}}/osc_client
      with:
        app-path: build/m1-M1-OrientationOSC_artefacts/M1-OrientationOSC.pkg
        apple-id: ${{ secrets.MACOS_NOTARIZE_USER }}
        password: ${{ secrets.MACOS_NOTARIZE_PWD }}
        team-id: ${{ secrets.TEAM_ID }}
        # Further Parameters:
        staple: 'true' # if you wish to skip running stapler

    - name: OC InnoSetup Installer (windows)
      if: runner.os == 'Windows'
      working-directory: ${{runner.workspace}}/osc_client/build
      run: |
        "%programfiles(x86)%\Inno Setup 6\iscc.exe" /DBuildDir="${{runner.workspace}}\osc_client\build\m1-M1-OrientationOSC_artefacts\Release" "${{runner.workspace}}\osc_client\Resources\InnoSetup.iss"
      shell: cmd

    - name: 'OC Upload Artifact (macos)'
      if: runner.os == 'MacOS'
      uses: actions/upload-artifact@v2
      working-directory: ${{runner.workspace}}/osc_client
      with:
        name: M1-OrientationOSC (MacOS)
        path: build/m1-M1-OrientationOSC_artefacts/Release/M1-OrientationOSC.pkg
        if-no-files-found: error

    - name: 'OC Upload Artifact (windows)'
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v2
      working-directory: ${{runner.workspace}}\osc_client
      with:
        name: M1-OrientationOSC (Windows)
        path: build\m1-M1-OrientationOSC_artefacts\Release\Output\M1-OrientationOSC_WIN.exe
        if-no-files-found: error